services:
  api:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    container_name: seabattle_backend_app
    ports:
      - "8080:8080"
    environment:
      # --- Настройки ASP.NET CORE (добавлено) ---
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
      ASPNETCORE_URLS: ${ASPNETCORE_URLS}
      AllowedHosts: ${AllowedHosts}
      # --- Настройки PgSQL ---
      ConnectionStrings__DefaultConnection: ${CONNECTION_STRING}
      # --- Настройки reCAPTCHA ---
      Recaptcha__ApiUrl: ${RECAPTCHA_API_URL}
      Recaptcha__SiteKey: ${RECAPTCHA_SITE_KEY}
      Recaptcha__SecretKey: ${RECAPTCHA_SECRET_KEY}
      Recaptcha__ScoreThreshold: ${RECAPTCHA_SCORE_THRESHOLD}
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:8080/health/live" ]
      interval: 5s
      timeout: 5s
      retries: 5
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:17.5-alpine
    container_name: seabattle_postgres_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data: